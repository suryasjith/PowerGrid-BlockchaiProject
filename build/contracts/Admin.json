{
  "contractName": "Admin",
  "abi": [
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "consumerNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registration",
      "outputs": [
        {
          "internalType": "address",
          "name": "accountNo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "consumerNo",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_consumerAddress",
          "type": "address"
        }
      ],
      "name": "addConsumer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consumerAddress\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consumerNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registration\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"accountNo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"consumerNo\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Surya/Desktop/PROJECT/bc/ced-b4-g02-sm/contracts/Admin.sol\":\"Admin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Surya/Desktop/PROJECT/bc/ced-b4-g02-sm/contracts/Admin.sol\":{\"keccak256\":\"0x17d07e3b29eb29b0aba68562067687fa36409348ba2695dc5f44a643fed8e7d2\",\"urls\":[\"bzz-raw://3ff0d8057de5e4fb88d1862eb53d53cd6d4cafe3c7969dd4f478ad567c1e16e3\",\"dweb:/ipfs/QmXfhkMsy3oVairK7X7gZmigQFm97RiQFFFrHWLDG9tGbf\"]},\"/C/Users/Surya/Desktop/PROJECT/bc/ced-b4-g02-sm/contracts/AdminPower.sol\":{\"keccak256\":\"0x3c549e7f353a6e0f8bcd91794326904b48038937e12a07a6d5060cd1d16d3693\",\"urls\":[\"bzz-raw://07c18cd3cf8103b510964b09d398a444ba897eb86132201c61d4753d1e830e91\",\"dweb:/ipfs/QmZ7bjAQsGoxZSQiNrdW3a9qSZr4v2KKJbyXwHprdrw29X\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610326806100536000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063112940f91461005c57806327581f2e146100a05780633516dcd1146100be5780638f32d59b14610133578063b2bdfa7b14610155575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019f565b005b6100a861022a565b6040518082815260200191505060405180910390f35b6100ea600480360360208110156100d457600080fd5b8101908080359060200190929190505050610230565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b61013b610274565b604051808215151515815260200191505060405180910390f35b61015d6102cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6001600081548092919060010191905055508060026000600154815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001546002600060015481526020019081526020016000206001018190555050565b60015481565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122065ea77a3524cb31184f925c5ce323e48db72b1348b76eb4e30060f5822f3776a64736f6c63430006010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063112940f91461005c57806327581f2e146100a05780633516dcd1146100be5780638f32d59b14610133578063b2bdfa7b14610155575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019f565b005b6100a861022a565b6040518082815260200191505060405180910390f35b6100ea600480360360208110156100d457600080fd5b8101908080359060200190929190505050610230565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b61013b610274565b604051808215151515815260200191505060405180910390f35b61015d6102cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6001600081548092919060010191905055508060026000600154815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001546002600060015481526020019081526020016000206001018190555050565b60015481565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122065ea77a3524cb31184f925c5ce323e48db72b1348b76eb4e30060f5822f3776a64736f6c63430006010033",
  "sourceMap": "86:669:0:-:0;;;138:10:1;129:6;;:19;;;;;;;;;;;;;;;;;;86:669:0;;;;;;",
  "deployedSourceMap": "86:669:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;86:669:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:327;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;426:327:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;122:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;333:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;333:48:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;352:81:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;78:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;426:327:0;494:14;;:16;;;;;;;;;;;;;593;554:12;:28;567:14;;554:28;;;;;;;;;;;:38;;;:55;;;;;;;;;;;;;;;;;;698:14;;658:12;:28;671:14;;658:28;;;;;;;;;;;:39;;:54;;;;426:327;:::o;122:26::-;;;;:::o;333:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;352:81:1:-;392:4;423:6;;;;;;;;;;;409:20;;:10;:20;;;401:29;;352:81;:::o;78:21::-;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\nimport \"./AdminPower.sol\";\n\n\n\ncontract Admin is AdminPower{\n\n\n    uint public consumerNumber;\n    struct regConsumer\n    {\n        address accountNo; //consumer address\n\n        uint consumerNo;\n    }\n\n\n\n    //to store address of consumer according to registration  number\n    mapping(uint => regConsumer) public registration;\n\n\n    //Consumer registration function\n    function addConsumer(address _consumerAddress) public\n    {\n        consumerNumber++; //self increment consumer number\n\n        registration[consumerNumber].accountNo=_consumerAddress; //consumer's public address is stored\n\n        registration[consumerNumber].consumerNo=consumerNumber; //consumer's number is stored\n\n\n\n\n    }\n}",
  "sourcePath": "C:\\Users\\Surya\\Desktop\\PROJECT\\bc\\ced-b4-g02-sm\\contracts\\Admin.sol",
  "ast": {
    "absolutePath": "/C/Users/Surya/Desktop/PROJECT/bc/ced-b4-g02-sm/contracts/Admin.sol",
    "exportedSymbols": {
      "Admin": [
        39
      ]
    },
    "id": 40,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "/C/Users/Surya/Desktop/PROJECT/bc/ced-b4-g02-sm/contracts/AdminPower.sol",
        "file": "./AdminPower.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 40,
        "sourceUnit": 76,
        "src": "56:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "AdminPower",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 75,
              "src": "104:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminPower_$75",
                "typeString": "contract AdminPower"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "104:10:0"
          }
        ],
        "contractDependencies": [
          75
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 39,
        "linearizedBaseContracts": [
          39,
          75
        ],
        "name": "Admin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "27581f2e",
            "id": 6,
            "name": "consumerNumber",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 39,
            "src": "122:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "122:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Admin.regConsumer",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 8,
                "name": "accountNo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 11,
                "src": "187:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "187:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "consumerNo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 11,
                "src": "234:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "regConsumer",
            "nodeType": "StructDefinition",
            "scope": 39,
            "src": "154:102:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3516dcd1",
            "id": 15,
            "name": "registration",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 39,
            "src": "333:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_regConsumer_$11_storage_$",
              "typeString": "mapping(uint256 => struct Admin.regConsumer)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "341:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "333:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_regConsumer_$11_storage_$",
                "typeString": "mapping(uint256 => struct Admin.regConsumer)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13,
                "name": "regConsumer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 11,
                "src": "349:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_regConsumer_$11_storage_ptr",
                  "typeString": "struct Admin.regConsumer"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "484:269:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "494:16:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "consumerNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "494:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "494:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 23,
                          "name": "registration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "554:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_regConsumer_$11_storage_$",
                            "typeString": "mapping(uint256 => struct Admin.regConsumer storage ref)"
                          }
                        },
                        "id": 25,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24,
                          "name": "consumerNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "567:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "554:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_regConsumer_$11_storage",
                          "typeString": "struct Admin.regConsumer storage ref"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accountNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "554:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 27,
                      "name": "_consumerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "593:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "554:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "554:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "registration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "658:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_regConsumer_$11_storage_$",
                            "typeString": "mapping(uint256 => struct Admin.regConsumer storage ref)"
                          }
                        },
                        "id": 32,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 31,
                          "name": "consumerNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "671:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "658:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_regConsumer_$11_storage",
                          "typeString": "struct Admin.regConsumer storage ref"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "consumerNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "658:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "consumerNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "698:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "658:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "658:54:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "112940f9",
            "id": 38,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addConsumer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "name": "_consumerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 38,
                  "src": "447:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "446:26:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:0"
            },
            "scope": 39,
            "src": "426:327:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 40,
        "src": "86:669:0"
      }
    ],
    "src": "32:723:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Surya/Desktop/PROJECT/bc/ced-b4-g02-sm/contracts/Admin.sol",
    "exportedSymbols": {
      "Admin": [
        39
      ]
    },
    "id": 40,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "/C/Users/Surya/Desktop/PROJECT/bc/ced-b4-g02-sm/contracts/AdminPower.sol",
        "file": "./AdminPower.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 40,
        "sourceUnit": 76,
        "src": "56:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "AdminPower",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 75,
              "src": "104:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminPower_$75",
                "typeString": "contract AdminPower"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "104:10:0"
          }
        ],
        "contractDependencies": [
          75
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 39,
        "linearizedBaseContracts": [
          39,
          75
        ],
        "name": "Admin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "27581f2e",
            "id": 6,
            "name": "consumerNumber",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 39,
            "src": "122:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "122:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Admin.regConsumer",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 8,
                "name": "accountNo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 11,
                "src": "187:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "187:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "consumerNo",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 11,
                "src": "234:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "regConsumer",
            "nodeType": "StructDefinition",
            "scope": 39,
            "src": "154:102:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3516dcd1",
            "id": 15,
            "name": "registration",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 39,
            "src": "333:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_regConsumer_$11_storage_$",
              "typeString": "mapping(uint256 => struct Admin.regConsumer)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "341:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "333:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_regConsumer_$11_storage_$",
                "typeString": "mapping(uint256 => struct Admin.regConsumer)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13,
                "name": "regConsumer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 11,
                "src": "349:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_regConsumer_$11_storage_ptr",
                  "typeString": "struct Admin.regConsumer"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "484:269:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "494:16:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "consumerNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "494:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "494:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 23,
                          "name": "registration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "554:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_regConsumer_$11_storage_$",
                            "typeString": "mapping(uint256 => struct Admin.regConsumer storage ref)"
                          }
                        },
                        "id": 25,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24,
                          "name": "consumerNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "567:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "554:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_regConsumer_$11_storage",
                          "typeString": "struct Admin.regConsumer storage ref"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accountNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "554:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 27,
                      "name": "_consumerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "593:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "554:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "554:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "registration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "658:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_regConsumer_$11_storage_$",
                            "typeString": "mapping(uint256 => struct Admin.regConsumer storage ref)"
                          }
                        },
                        "id": 32,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 31,
                          "name": "consumerNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "671:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "658:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_regConsumer_$11_storage",
                          "typeString": "struct Admin.regConsumer storage ref"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "consumerNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "658:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "consumerNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "698:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "658:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "658:54:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "112940f9",
            "id": 38,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addConsumer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "name": "_consumerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 38,
                  "src": "447:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "446:26:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:0"
            },
            "scope": 39,
            "src": "426:327:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 40,
        "src": "86:669:0"
      }
    ],
    "src": "32:723:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.1+commit.e6f7d5a4.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x511D08c91239a8613023ea04BD7128CE6fecd729",
      "transactionHash": "0xe40a8474a5e178b0858f86d15147a145ea61f72fd43edd9e66efc26e57278f29"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-12-27T10:20:56.407Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}